trigger:
- none
jobs:
- job: Build_JS
  displayName: "Build JS Bundle"
  pool:
    vmImage: 'macos-latest'
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - script: |
      npm install
    displayName: 'npm install'
  # - task: ArchiveFiles@2
  #   displayName: 'Archive Source'
  #   inputs:
  #     rootFolderOrFile: '$(Build.SourcesDirectory)'
  #     archiveFile: '$(Build.ArtifactStagingDirectory)/dest.zip'
  # - task: PublishPipelineArtifact@1
  #   displayName: 'Publish Source'
  #   timeoutInMinutes: 1
  #   inputs:
  #     targetPath: '$(Build.ArtifactStagingDirectory)/'
  #     artifact: 'dist'
  #     publishLocation: 'pipeline'
      
- job: build_ios
  variables:
    - group: mobile-app

  displayName: "Build iOS IPA"
  dependsOn: Build_JS
  condition: succeeded('Build_JS')
  pool:
    vmImage: macos-latest
  
  steps:
  # - task: DownloadPipelineArtifact@2
  #   displayName: 'Download build artifact'
  #   inputs:
  #     buildType: 'current'
  #     artifactName: 'dist'
  #     targetPath: '$(Build.ArtifactStagingDirectory)'
  
  # - task: ExtractFiles@1
  #   inputs:
  #     archiveFilePatterns: '$(Build.ArtifactStagingDirectory)/**/*.zip'
  #     destinationFolder: '$(Build.ArtifactStagingDirectory)/'
  #     cleanDestinationFolder: false

  - script: |
      npm install -g @ionic/cli@6.18.1
    displayName: 'Install Ionic'
  
  - script: |
      npm install -g cordova@11.0.0 cordova-res
    displayName: 'Install Cordova'
  
  # - task: CmdLine@2
  #   inputs:
  #     script: 'cd $(Build.ArtifactStagingDirectory)/s'
  #   displayName: 'Change Directory'
  
  - task: CmdLine@2
    inputs:
      script: 'ionic cordova platform add ios@6.2.0 --save'
    displayName: 'add ios platform'
  
  - task: CmdLine@2
    inputs:
      script: 'ionic cordova prepare ios'
    displayName: 'bundle ios files'
  - task: InstallAppleCertificate@2
    inputs:
      certSecureFile: 'distribute.p12'
      certPwd: '$(p12password)'
      keychain: 'temp'
    
  - task: InstallAppleProvisioningProfile@1
    inputs:
      provisioningProfileLocation: secureFiles
      provProfileSecureFile: 'toonworldapp.mobileprovision'
  
  - task: Xcode@5
    inputs:
      actions: 'build'
      xcWorkspacePath: 'platforms/ios/*.xcworkspace'
      scheme: 'ToonWorldApp'
      sdk: 'iphoneos'
      configuration: 'Release'
      packageApp: true
      signingOption: 'manual'
      signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
      provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
    displayName: 'Build and sign iOS App'
  
  - task: CopyFiles@2
    inputs:
      contents: '**/*.ipa'
      targetFolder: '$(build.BinariesDirectory)'
      flattenFolders: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.BinariesDirectory)'
      ArtifactName: 'ios-app'
      
  
  # - task: AppCenterDistribute@3
  #   inputs:
  #     serverEndpoint: 'AppCenter'
  #     appSlug: 'toonbosmans/ToonWorld'
  #     appFile: '$(Build.BinariesDirectory)/*.ipa'
  #     releaseNotesOption: 'input'
  #     releaseNotesInput: 'This is a test'
  #     destinationType: 'store'
  #     destinationStoreId: 'fillthisout'

- job: build_android
  variables:
    - group: mobile-app

  displayName: "Build Android APK"
  dependsOn: Build_JS
  condition: succeeded('Build_JS')
  pool:
    vmImage: macos-latest
  
  steps:
  - script: |
        npm install -g @ionic/cli@6.18.1
        displayName: 'Install Ionic'
    
  - script: |
        npm install -g cordova@11.0.0 cordova-res
        displayName: 'Install Cordova'
  
  - task: CmdLine@2
    inputs:
      script: 'ionic cordova platform add android --save'
    displayName: 'add android platform'
  
  - task: CmdLine@2
    inputs:
      script: 'ionic cordova build android --prod --release'
    displayName: 'build android'
  
  - task: AndroidSigning@3
    displayName: 'android signing'
    inputs:
      apkFiles: '**/outputs/apk/release/*.apk'
      apksignerKeystoreFile: 'toonworld.keystore'
      apksignerKeystorePassword: '$(password_keystore)'

  - task: CopyFiles@2 
    displayName: 'copy apk to $(Build.BinariesDirectory)'
    inputs:
      Contents: '**/outputs/apk/release/*.apk'
      TargetFolder: '$(Build.BinariesDirectory)'
      flattenFolders: true


  - publish: '$(Build.BinariesDirectory)' 
    artifact: 'android-app'
    displayName: 'publish android apk artifact'
  
  # - task: AppCenterDistribute@3
  #   inputs:
  #     serverEndpoint: 'AppCenter'
  #     appSlug: 'toonbosmans/ToonWorld'
  #     appFile: '$(Build.BinariesDirectory)/*.apk'
  #     releaseNotesOption: 'input'
  #     releaseNotesInput: 'This is a test'
  #     destinationType: 'store'
  #     destinationStoreId: 'fillthisout'